<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sy.dao.TrafficEconomyAmapSpeedRawHzMapper" >
  <resultMap id="BaseResultMap" type="sy.model.TrafficEconomyAmapSpeedRawHz" >
    <id column="link_id" property="linkId" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
    <result column="travel_time" property="travelTime" jdbcType="VARCHAR" />
    <result column="speed" property="speed" jdbcType="INTEGER" />
    <result column="reliabilitycode" property="reliabilitycode" jdbcType="INTEGER" />
    <result column="link_len" property="linkLen" jdbcType="INTEGER" />
    <result column="adcode" property="adcode" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    link_id, update_time, travel_time, speed, reliabilitycode, link_len, adcode
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from traffic_economy_amap_speed_raw_hz
    where link_id = #{linkId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from traffic_economy_amap_speed_raw_hz
    where link_id = #{linkId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="sy.model.TrafficEconomyAmapSpeedRawHz" >
    insert into traffic_economy_amap_speed_raw_hz (link_id, update_time, travel_time, 
      speed, reliabilitycode, link_len, 
      adcode)
    values (#{linkId,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}, #{travelTime,jdbcType=INTEGER}, 
      #{speed,jdbcType=INTEGER}, #{reliabilitycode,jdbcType=INTEGER}, #{linkLen,jdbcType=INTEGER}, 
      #{adcode,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="sy.model.TrafficEconomyAmapSpeedRawHz" >
    insert into traffic_economy_amap_speed_raw_hz
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="linkId != null" >
        link_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="travelTime != null" >
        travel_time,
      </if>
      <if test="speed != null" >
        speed,
      </if>
      <if test="reliabilitycode != null" >
        reliabilitycode,
      </if>
      <if test="linkLen != null" >
        link_len,
      </if>
      <if test="adcode != null" >
        adcode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="linkId != null" >
        #{linkId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="travelTime != null" >
        #{travelTime,jdbcType=INTEGER},
      </if>
      <if test="speed != null" >
        #{speed,jdbcType=INTEGER},
      </if>
      <if test="reliabilitycode != null" >
        #{reliabilitycode,jdbcType=INTEGER},
      </if>
      <if test="linkLen != null" >
        #{linkLen,jdbcType=INTEGER},
      </if>
      <if test="adcode != null" >
        #{adcode,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="sy.model.TrafficEconomyAmapSpeedRawHz" >
    update traffic_economy_amap_speed_raw_hz
    <set >
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="travelTime != null" >
        travel_time = #{travelTime,jdbcType=INTEGER},
      </if>
      <if test="speed != null" >
        speed = #{speed,jdbcType=INTEGER},
      </if>
      <if test="reliabilitycode != null" >
        reliabilitycode = #{reliabilitycode,jdbcType=INTEGER},
      </if>
      <if test="linkLen != null" >
        link_len = #{linkLen,jdbcType=INTEGER},
      </if>
      <if test="adcode != null" >
        adcode = #{adcode,jdbcType=INTEGER},
      </if>
    </set>
    where link_id = #{linkId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="sy.model.TrafficEconomyAmapSpeedRawHz" >
    update traffic_economy_amap_speed_raw_hz
    set update_time = #{updateTime,jdbcType=VARCHAR},
      travel_time = #{travelTime,jdbcType=INTEGER},
      speed = #{speed,jdbcType=INTEGER},
      reliabilitycode = #{reliabilitycode,jdbcType=INTEGER},
      link_len = #{linkLen,jdbcType=INTEGER},
      adcode = #{adcode,jdbcType=INTEGER}
    where link_id = #{linkId,jdbcType=VARCHAR}
  </update>
  
  <select id="getAll" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from traffic_economy_amap_speed_raw_hz
  </select>
</mapper>